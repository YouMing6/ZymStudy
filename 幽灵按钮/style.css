*{
	margin: 0;
	padding: 0;
}
body{
	background: rgba(0 ,255 ,255,1);
}
.box{
	width: 1000px;
	height: 280px;
	margin: 50px auto;

}
.box .link{
width: 205px;
height: 280px;
float: left;
margin: 0 20px;
}
/*span是内联属性，不具备宽高属性的，需要设置dispaly:block*/
.link .icon{
	width: 100%;
	height:190px;
	display: inline-block;
	transition-duration: 0.8s; 
	-webkit-transition-duration: 0.8s;
	/*以后用的时候注意浏览器兼容*/
	/*
	
	linear	规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）。
	ease	规定慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25,0.1,0.25,1)）。
	ease-in	规定以慢速开始的过渡效果（等于 cubic-bezier(0.42,0,1,1)）。
	ease-out	规定以慢速结束的过渡效果（等于 cubic-bezier(0,0,0.58,1)）。
	ease-in-out	规定以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）。
	cubic-bezier(n,n,n,n)	在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值。*/

}
.link-miss .icon{
	background: url("img/GAME.png" ) no-repeat  center center;
	background-size:100%;/*图片100%自适应*/
}

.link-play .icon{
	background: url("img/huojian.png" ) no-repeat center center;
	background-size:100% 100%;/*图片100%自适应*/
}

.link-touch .icon{
	background: url("img/dingwei.png" ) no-repeat center center;
	background-size:100% 100%;/*图片100%自适应*/
}

/*鼠标事件，鼠标经过动画 CSS3 transform*/
/*
transform 方法
	translate(x,y)移动  translate(50px,100px) 把元素从左侧移动 50 像素，从顶端移动 100 像素
	rotate(角度) 元素顺时针旋转给定的角度。允许负值，元素将逆时针旋转。  如30deg
	scale(x,y) 缩放 元素的尺寸会增加或减少，根据给定的宽度（X 轴）和高度（Y 轴）参数
	skew(x,y)  元素翻转给定的角度，根据给定的水平线（X 轴）和垂直线（Y 轴）参数
	matrix() 把所有 2D 转换方法组合在一起。
 
Internet Explorer 10、Firefox 以及 Opera 支持 transform 属性。
Chrome 和 Safari 需要前缀 -webkit-。
Internet Explorer 9 需要前缀 -ms-。
 */

/*
transition	过渡	
transition-property	 规定应用过渡的 CSS 属性的名称。	
transition-duration	 定义过渡效果花费的时间。默认是 0。	
transition-timing-function	规定过渡效果的时间曲线。默认是 "ease"。	
transition-delay	规定过渡效果何时开始。默认是 0。

Internet Explorer 10、Firefox、Chrome 以及 Opera 支持 transition 属性。
Safari 需要前缀 -webkit-。
Internet Explorer 9 以及更早的版本，不支持 transition 属性。
Chrome 25 以及更早的版本，需要前缀 -webkit-。
 */
.link .icon:hover{
	transform: rotate(360deg) scale(1.5);
	-webkit-transform: rotate(360deg) scale(1.5);
	
}



/*
box-sizing属性允许您以特定的方式定义匹配某个区域的特定元素

content-box	
这是由 CSS2.1 规定的宽度高度行为。

宽度和高度分别应用到元素的内容框。

在宽度和高度之外绘制元素的内边距和边框。

border-box	
为元素设定的宽度和高度决定了元素的边框盒。

就是说，为元素指定的任何内边距和边框都将在已设定的宽度和高度内进行绘制。

通过从已设定的宽度和高度分别减去边框和内边距才能得到内容的宽度和高度。

inherit	规定应从父元素继承 box-sizing 属性的值。
 */
.button{
	display:block;/*a标签也是内联元素要display*/
	width: 180px;
	height: 50px;
	text-decoration: none; /*清空a标签的下划线*/
	line-height: 50px;
	color: #2DCB70;
	font-weight: bolder;
	border: 2px solid rgba(255,255,255,0.7);
	padding-left: 20px;
	margin: 10px auto;
	box-sizing: border-box;
	background: url("img/jiantou.png") no-repeat 120px center;
	transition:0.5s ease;
	/*-webkit-transition:0.5s ease;*/
}
.button:hover{
	border: 2px solid rgba(255,255,255,1);
	background-position: 140px center;

}